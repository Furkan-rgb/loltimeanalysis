name: Deploy Backend to DigitalOcean

# This workflow runs on every push to the 'main' branch
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # This action simplifies running commands on a remote server over SSH
      - name: SSH and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            cd ~/loltimeanalysis/backend
            git pull

            export TEMPORAL_WORKER_BUILD_ID=${{ github.ref_name }}

            docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d --build

            echo "Waiting for worker deployment 'match-history-processor' to register..."
            ATTEMPTS=0
            MAX_ATTEMPTS=12
            SUCCESS=false
            until [ $ATTEMPTS -eq $MAX_ATTEMPTS ]
            do
              # Use the '--name' flag for your CLI version
              if docker compose exec -T temporal-admin-tools temporal --address temporal:7233 worker deployment describe --name "match-history-processor"; then
                SUCCESS=true
                break
              fi
              ATTEMPTS=$((ATTEMPTS+1))
              echo "Deployment not found yet. Attempt $ATTEMPTS/$MAX_ATTEMPTS. Retrying in 5 seconds..."
              sleep 5
            done

            if [ "$SUCCESS" = "false" ]; then
              echo "Worker deployment did not register in time. Aborting."
              exit 1
            fi
            echo "Worker deployment is registered."

            echo "Promoting Build ID ${{ github.ref_name }} to default..."
            # Use the '--name' flag for your CLI version
            docker compose exec -T temporal-admin-tools temporal --address temporal:7233 worker deployment set-current-version \
              --name "match-history-processor" \
              --build-id "${{ github.ref_name }}"
