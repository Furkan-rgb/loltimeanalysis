name: Deploy Backend to DigitalOcean

on:
  push:
    tags:
      - "v*"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: SSH and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            # Exit immediately if a command exits with a non-zero status.
            set -e

            # --- Define a reusable function to wait for a specific build ID to register ---
            wait_for_build_id() {
              local deployment_name="$1"
              local build_id="$2"
              echo "--> Waiting for Build ID '$build_id' to register for deployment '$deployment_name'..."
              
              for i in {1..12}; do
                # Check the list of versions for the specific build ID. This is more reliable.
                if docker compose exec -T temporal-admin-tools temporal worker deployment list-versions --deployment-name "$deployment_name" | grep -q "$build_id"; then
                  echo "--> Build ID '$build_id' found for '$deployment_name'."
                  return 0
                fi
                echo "Build ID not found yet. Attempt $i/12. Retrying in 5 seconds..."
                sleep 5
              done

              echo "!!> Build ID '$build_id' did not register for '$deployment_name' in time. Aborting."
              exit 1
            }

            # --- Main Deployment Logic ---
            cd ~/loltimeanalysis/backend
            git pull

            export TEMPORAL_WORKER_BUILD_ID=${{ github.ref_name }}

            echo "--> Building and starting services with Build ID: $TEMPORAL_WORKER_BUILD_ID"
            docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d --build

            # Wait for the specific build ID to appear for each deployment
            wait_for_build_id "match-history-processor" "$TEMPORAL_WORKER_BUILD_ID"
            wait_for_build_id "internal-processor" "$TEMPORAL_WORKER_BUILD_ID"

            echo "--> Promoting Build ID to default for both deployments..."
            yes | docker compose exec -T temporal-admin-tools temporal worker deployment set-current-version \
              --deployment-name "match-history-processor" \
              --build-id "$TEMPORAL_WORKER_BUILD_ID"

            yes | docker compose exec -T temporal-admin-tools temporal worker deployment set-current-version \
              --deployment-name "internal-processor" \
              --build-id "$TEMPORAL_WORKER_BUILD_ID"

            echo "âœ… Deployment successful for Build ID: $TEMPORAL_WORKER_BUILD_ID"
